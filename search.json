[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "nbdev_cards",
    "section": "",
    "text": "This file will become your README and also the index of your documentation.",
    "crumbs": [
      "nbdev_cards"
    ]
  },
  {
    "objectID": "index.html#install",
    "href": "index.html#install",
    "title": "nbdev_cards",
    "section": "Install",
    "text": "Install\npip install nbdev_cards",
    "crumbs": [
      "nbdev_cards"
    ]
  },
  {
    "objectID": "index.html#how-to-use",
    "href": "index.html#how-to-use",
    "title": "nbdev_cards",
    "section": "How to use",
    "text": "How to use\nFill me in please! Don’t forget code examples:\n\n1+1\n\n2\n\n\n\nCard(1,3)\n\n3♦",
    "crumbs": [
      "nbdev_cards"
    ]
  },
  {
    "objectID": "deck.html",
    "href": "deck.html",
    "title": "deck",
    "section": "",
    "text": "from fastcore.utils import *\n\n\nsource\n\nDeck\n\n Deck ()\n\nInitialize self. See help(type(self)) for accurate signature.\n\ndeck = Deck()\n\n\ntest_eq(len(deck), 52)\n\n\nsource\n\n\nDeck.pop\n\n Deck.pop (idx:int=-1)\n\n\ndeck = Deck()\ndeck.pop()\n\nK♠",
    "crumbs": [
      "deck"
    ]
  },
  {
    "objectID": "card.html",
    "href": "card.html",
    "title": "core",
    "section": "",
    "text": "We will be using numbers to represent playing card clubs and ranks. These are the suits\n\nsuits\n\n['♣', '♦', '♥', '♠']\n\n\n\nsuits[0]\n\n'♣'\n\n\n\nranks\n\n[None, 'A', '2', '3', '4', '5', '6', '7', '8', '9', '10', 'J', 'Q', 'K']\n\n\n\nc = Card(suit=1, rank=3)\n\n\nc\n\n3♦\n\n\n\nComparison operators\nequality, less than, and greater than work on the rank and suit indices:\n\nsource\n\nCard\n\n Card (suit:int, rank:int)\n\nA playing card\n\ntest_eq(Card(suit=1, rank=3), Card(suit=1, rank=3))\ntest_ne(Card(suit=2, rank=3), Card(suit=1, rank=3))\ntest_ne(Card(suit=1, rank=2), Card(suit=1, rank=3))\n\n\nassert Card(suit=1, rank=3)&lt;Card(suit=2, rank=3)\n\n\nsource\n\n\nfoo\n\n foo ()",
    "crumbs": [
      "core"
    ]
  }
]